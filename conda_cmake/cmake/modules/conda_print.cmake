
include(conda_color)

function(conda_debug)
    if (CONDA_STATUS_DEBUG)
        string(TIMESTAMP timestamp)
        if (CONDA_CACHE_RUN)
            set(type "DEBUG (CACHE RUN)")
        else ()
            set(type "DEBUG")
        endif ()
        message(STATUS "${conda_blue}[conda *** ${type} *** ${timestamp}] ${ARGV}${conda_colour_reset}")
    endif ()
endfunction(conda_debug)

function(conda_print)
    if (CONDA_STATUS_PRINT OR CONDA_STATUS_DEBUG)
        if (CONDA_CACHE_RUN)
            conda_debug("${ARGV}")
        else ()
            message(STATUS "${conda_green}[conda] ${ARGV}${conda_colour_reset}")
        endif ()
    endif ()
endfunction(conda_print)

function(conda_error)
    message("")
    foreach (print_message ${ARGV})
        message(SEND_ERROR "${conda_bold_red}[conda ** INTERNAL **] ${print_message}${conda_colour_reset}")
    endforeach ()
    message(FATAL_ERROR "${conda_bold_red}[conda ** INTERNAL **] [Directory:${CMAKE_CURRENT_LIST_DIR}]${conda_colour_reset}")
    message("")
endfunction(conda_error)

function(conda_warn)
    message("")
    foreach (print_message ${ARGV})
        message(WARNING "${conda_red}[conda WARNING] ${print_message}${conda_colour_reset}")
    endforeach ()
    message(WARNING "${conda_red}[conda WARNING] [Directory:${CMAKE_CURRENT_LIST_DIR}]${conda_colour_reset}")
    message("")
endfunction(conda_warn)

set(CONDA_ALIGN_LENGTH 30)
MACRO(conda_print_label Label Value)
    string(LENGTH ${Label} lLength)
    math(EXPR paddingLeng ${CONDA_ALIGN_LENGTH}-${lLength})
    string(REPEAT " "  ${paddingLeng} PADDING)
    message("${conda_yellow}${Label}${conda_colour_reset}:${PADDING}${conda_cyan}${Value}${conda_colour_reset}")
ENDMACRO()

MACRO(conda_raw Value)
    message("${Value}")
ENDMACRO()
